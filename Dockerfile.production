# 完整的Timee应用生产镜像
FROM node:18-alpine AS base

# 安装必要的工具
RUN apk add --no-cache curl postgresql-client

# 设置工作目录
WORKDIR /app

# 复制整个项目
COPY . .

# 安装后端依赖
WORKDIR /app/timee-api
RUN npm ci

# 生成 Prisma 客户端
RUN npx prisma generate

# 构建后端
RUN npm run build

# 安装前端依赖
WORKDIR /app/timee-frontend
RUN npm ci

# 构建前端
RUN npm run build

# 复制构建结果到正确位置
WORKDIR /app/timee-api
RUN cp -r ../timee-frontend/apps/web/dist/* public/

# 复制代理服务器配置
WORKDIR /app
RUN cp proxy-server-simple.js timee-api/

# 创建启动脚本
RUN echo '#!/bin/sh' > /app/start-app.sh && \
    echo 'set -e' >> /app/start-app.sh && \
    echo 'echo "🚀 Starting Timee Application"' >> /app/start-app.sh && \
    echo 'cd /app/timee-api' >> /app/start-app.sh && \
    echo 'echo "📡 Starting backend API on port 3000..."' >> /app/start-app.sh && \
    echo 'npm start &' >> /app/start-app.sh && \
    echo 'sleep 5' >> /app/start-app.sh && \
    echo 'echo "🔗 Starting proxy server on port 8080..."' >> /app/start-app.sh && \
    echo 'node proxy-server-simple.js &' >> /app/start-app.sh && \
    echo 'wait' >> /app/start-app.sh

RUN chmod +x /app/start-app.sh

# 暴露端口
EXPOSE 8080

# 健康检查
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
  CMD curl -f http://localhost:8080/api/health || exit 1

# 启动应用
CMD ["/app/start-app.sh"] 